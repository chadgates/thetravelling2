# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-02 09:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0007_merge'),
        ('wagtailimages', '0016_deprecate_rendition_filter_relation'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccommodationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('TwoColumnBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('theme-white', 'White'), ('theme-black', 'Black'), ('theme-darker', 'Dark Gray'), ('theme-body-color', 'Body Color'), ('theme-primary', 'Primary Color'), ('theme-secondary', 'Secondary Color')], default='white')), ('left_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-left', label='Left column content')), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-right', label='Right column content')))))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlockPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('CoupleBlock', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('maintitle', wagtail.wagtailcore.blocks.CharBlock()), ('subtitle', wagtail.wagtailcore.blocks.CharBlock()), ('headline', wagtail.wagtailcore.blocks.CharBlock()), ('bridename', wagtail.wagtailcore.blocks.CharBlock()), ('bridetext', wagtail.wagtailcore.blocks.TextBlock()), ('bridephoto', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('groomame', wagtail.wagtailcore.blocks.CharBlock()), ('groomtext', wagtail.wagtailcore.blocks.TextBlock()), ('groomphoto', wagtail.wagtailimages.blocks.ImageChooserBlock())))), ('TwoColumnBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('theme-white', 'White'), ('theme-black', 'Black'), ('theme-darker', 'Dark Gray'), ('theme-body-color', 'Body Color'), ('theme-primary', 'Primary Color'), ('theme-secondary', 'Secondary Color')], default='white')), ('left_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-left', label='Left column content')), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-right', label='Right column content'))))), ('GoogleMapBlock', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True))))), ('RichTextBlock', wagtail.wagtailcore.blocks.RichTextBlock()), ('TimeLineBlock', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('headline', wagtail.wagtailcore.blocks.CharBlock()), ('maintitle', wagtail.wagtailcore.blocks.CharBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock()), ('timelineentry', wagtail.wagtailcore.blocks.StreamBlock((('TimelineEntry', wagtail.wagtailcore.blocks.StructBlock((('headline', wagtail.wagtailcore.blocks.CharBlock()), ('date', wagtail.wagtailcore.blocks.CharBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock()), ('photo', wagtail.wagtailimages.blocks.ImageChooserBlock())))),), default='')))))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.CharField(blank=True, help_text='Default value. Comma separated values supported for checkboxes.', max_length=255, verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, verbose_name='to address')),
                ('from_address', models.CharField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Edit the content you want to see before the form.')),
                ('thank_you_text', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Set the message users will see after submitting the form.')),
            ],
            options={
                'verbose_name': 'Form submission page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GoodToKnowPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('TwoColumnBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('theme-white', 'White'), ('theme-black', 'Black'), ('theme-darker', 'Dark Gray'), ('theme-body-color', 'Body Color'), ('theme-primary', 'Primary Color'), ('theme-secondary', 'Secondary Color')], default='white')), ('left_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-left', label='Left column content')), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-right', label='Right column content')))))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('couplename', models.CharField(default='Someone & Someone', max_length=255)),
                ('subtitle', models.CharField(blank=True, default='We are getting married', max_length=255)),
                ('year', models.CharField(choices=[('2017', '2017'), ('2018', '2018'), ('2019', '2019')], default='2017', max_length=4)),
                ('month', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], default='7', max_length=2)),
                ('day', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31')], default='1', max_length=2)),
                ('hour', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24')], default='12', max_length=2)),
                ('minute', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48'), ('49', '49'), ('50', '50'), ('51', '51'), ('52', '52'), ('53', '53'), ('54', '54'), ('55', '55'), ('56', '56'), ('57', '57'), ('58', '58'), ('59', '59')], default='0', max_length=2)),
                ('seconds', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48'), ('49', '49'), ('50', '50'), ('51', '51'), ('52', '52'), ('53', '53'), ('54', '54'), ('55', '55'), ('56', '56'), ('57', '57'), ('58', '58'), ('59', '59')], default='0', max_length=2)),
                ('body', wagtail.wagtailcore.fields.StreamField((('CoupleBlock', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('maintitle', wagtail.wagtailcore.blocks.CharBlock()), ('subtitle', wagtail.wagtailcore.blocks.CharBlock()), ('headline', wagtail.wagtailcore.blocks.CharBlock()), ('bridename', wagtail.wagtailcore.blocks.CharBlock()), ('bridetext', wagtail.wagtailcore.blocks.TextBlock()), ('bridephoto', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('groomame', wagtail.wagtailcore.blocks.CharBlock()), ('groomtext', wagtail.wagtailcore.blocks.TextBlock()), ('groomphoto', wagtail.wagtailimages.blocks.ImageChooserBlock())))), ('TimeLineBlock', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('headline', wagtail.wagtailcore.blocks.CharBlock()), ('maintitle', wagtail.wagtailcore.blocks.CharBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock()), ('timelineentry', wagtail.wagtailcore.blocks.StreamBlock((('TimelineEntry', wagtail.wagtailcore.blocks.StructBlock((('headline', wagtail.wagtailcore.blocks.CharBlock()), ('date', wagtail.wagtailcore.blocks.CharBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock()), ('photo', wagtail.wagtailimages.blocks.ImageChooserBlock())))),), default='')))))), default='')),
                ('background', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('icsfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ImpressumPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OurDayPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('MainTitle', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('maintitle', wagtail.wagtailcore.blocks.CharBlock())))), ('Paragraph', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock())))), ('Image', wagtail.wagtailcore.blocks.StructBlock((('bg_gray', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Select if background should by gray', required=False)), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('endtoend', wagtail.wagtailcore.blocks.BooleanBlock()), ('width', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('original', 'original'), ('1920', '1920'), ('800', '800'), ('640', '640'), ('400', '400')], default='800'))))), ('TwoColumnBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('theme-white', 'White'), ('theme-black', 'Black'), ('theme-darker', 'Dark Gray'), ('theme-body-color', 'Body Color'), ('theme-primary', 'Primary Color'), ('theme-secondary', 'Secondary Color')], default='white')), ('left_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-left', label='Left column content')), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-right', label='Right column content'))))), ('EventBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('headline', wagtail.wagtailcore.blocks.CharBlock()), ('maintitle', wagtail.wagtailcore.blocks.CharBlock()), ('lefttitle', wagtail.wagtailcore.blocks.CharBlock()), ('lefttime', wagtail.wagtailcore.blocks.CharBlock()), ('leftdate', wagtail.wagtailcore.blocks.CharBlock()), ('lefttext', wagtail.wagtailcore.blocks.TextBlock()), ('righttitle', wagtail.wagtailcore.blocks.CharBlock()), ('righttime', wagtail.wagtailcore.blocks.CharBlock()), ('rightdate', wagtail.wagtailcore.blocks.CharBlock()), ('righttext', wagtail.wagtailcore.blocks.TextBlock()))))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OurWishPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('TwoColumnBlock', wagtail.wagtailcore.blocks.StructBlock((('background', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('theme-white', 'White'), ('theme-black', 'Black'), ('theme-darker', 'Dark Gray'), ('theme-body-color', 'Body Color'), ('theme-primary', 'Primary Color'), ('theme-secondary', 'Secondary Color')], default='white')), ('left_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-left', label='Left column content')), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('google_map', wagtail.wagtailcore.blocks.StructBlock((('map_width', wagtail.wagtailcore.blocks.CharBlock(default='600', max_length=4, required=True)), ('map_height', wagtail.wagtailcore.blocks.CharBlock(default='450', max_length=4, required=True)), ('map_params', wagtail.wagtailcore.blocks.CharBlock(help_text='No spaces, add + instead', max_length=300, required=True)))))), icon='arrow-right', label='Right column content')))))), default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='formfield',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='homepage.FormPage'),
        ),
    ]
